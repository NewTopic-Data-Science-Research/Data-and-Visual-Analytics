-- initial commands
.headers off
.separator ','

-- (a) Import data
-- [insert sql statement(s) below]

CREATE TABLE flights(airline text, flight_number integer, origin_airport text, destination_airport text, departure_delay integer, distance integer, arrival_delay integer);
.separator ','
.import flights.csv flights

CREATE TABLE airports(airport_code text, airport text, city text, state text, latitude real, longitude real);
.separator ','
.import airports.csv airports

CREATE TABLE airlines(airline_code text, airline text);
.separator ','
.import airlines.csv airlines


-- (b) Build indexes
-- [insert sql statement(s) below]

CREATE INDEX flights_airline_index ON flights (airline);
CREATE INDEX flights_origin_airport_index ON flights (origin_airport);
CREATE INDEX flights_destination_airport_index ON flights (destination_airport);
CREATE INDEX airport_airport_index ON airports (airport_code);
CREATE INDEX airlines_airline_index ON airlines (airline_code);


-- (c) Quick computations.
-- [insert sql statement(s) below]


SELECT COUNT (destination_airport) FROM flights WHERE destination_airport='SEA' AND arrival_delay>20;

SELECT COUNT (origin_airport) FROM flights WHERE origin_airport='SFO' AND departure_delay>20;

select '';


-- (d) Average delay of flights per airline 
-- [insert sql statement(s) below]

SELECT airlines.airline, AVG(flights.arrival_delay) AS Average
FROM flights
INNER JOIN airlines ON flights.airline = airlines.airline_code 
GROUP BY airlines.airline
ORDER BY Average DESC
LIMIT 5;

select '';

-- (e) Airlines at each airport
-- [insert sql statement(s) below]

SELECT DISTINCT ap.airport, al.airline
FROM flights AS f
INNER JOIN airlines AS al ON f.airline = al.airline_code
INNER JOIN airports AS ap ON f.origin_airport = ap.airport_code  
ORDER BY ap.airport, al.airline
LIMIT 30;

select '';

-- (f) Percentage of delayed flights
-- [insert sql statement(s) below]

SELECT ap.airport, CAST(ard.ad AS FLOAT)/ara.aa*100.0
FROM airports ap
INNER JOIN
(SELECT destination_airport, COUNT(arrival_delay) AS ad FROM flights WHERE arrival_delay>30 GROUP BY destination_airport) ard ON ap.airport_code = ard.destination_airport
INNER JOIN
(SELECT destination_airport, COUNT(destination_airport) AS aa FROM flights GROUP BY destination_airport) ara ON ap.airport_code = ara.destination_airport
ORDER BY ap.airport
LIMIT 20;

select '';

-- (g) Creating a view
-- [insert sql statement(s) below]

CREATE VIEW airport_distances(airport1_name, airport2_name, distance) AS
SELECT DISTINCT ap1.airport, ap2.airport, (ap1.latitude - ap2.latitude)*(ap1.latitude - ap2.latitude)
FROM airports ap1
INNER JOIN airports ap2
WHERE ap1.airport < ap2.airport;

SELECT * 
FROM airport_distances 
ORDER BY distance DESC
LIMIT 10;

select '';

-- (h) Count total pairs 
-- [insert sql statement(s) below]

SELECT COUNT(*) FROM airport_distances;

select '';

-- (i) Create and import data into FTS table movie_overview.
-- [insert sql statement(s) below]

CREATE VIRTUAL TABLE movie_overview USING fts4(id integer, name text, year integer, overview text, popularity decimal);
.separator ','
.import movie-overview.txt movie_overview

-- (i) part 1
-- [insert sql statement(s) below]

SELECT COUNT(*)
FROM movie_overview 
WHERE overview MATCH '^When';

select '';

-- (i) part 2
-- [insert sql statement(s) below]

SELECT id
FROM movie_overview
WHERE overview MATCH 'love NEAR/7 hate'
ORDER BY id ASC;
